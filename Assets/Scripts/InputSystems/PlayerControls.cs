//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/InputSystems/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace LessonIsMath.Input
{
    public partial class @PlayerControls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""2d5a58c0-bc50-45ec-a3ea-885c9c3bd10c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f3a4287c-1af2-4795-a3ea-f65c549854a1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6e2cdeeb-f867-4d2d-a60a-2259b4785752"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""b4906629-b8ea-4a00-835c-34e0a749f2e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""dee687e2-e17d-40ca-9780-fb9ce4727185"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9e2ae31d-a299-40ae-b40e-c494ed917216"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""d8b7c05d-8b03-4156-bc2f-7b2f433a9465"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""6c3b7605-3450-49ed-84b3-bb6e223f3bfa"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""a9d9d49a-1ec8-40c3-a84b-a554b8ce6cf4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""acdf8933-7850-4fd5-b01f-ea6f39d408fb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0f209809-5656-450d-835d-bbd9929d5947"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75a435fb-f5ba-42f9-a2cb-ce222ddf1820"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7d6557e-ed4d-4211-ace4-e11c8d0447f4"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""LockedDoorUI"",
            ""id"": ""6527b49d-c232-4401-bed3-e3fb63b9da31"",
            ""actions"": [
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""0fc26fa2-35e9-49ed-b4b6-3ab536c001bf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0ce3b9d3-8422-40e9-9adb-fce6fb06bf49"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c76ea3b7-446e-4506-94d9-d5a0d39fc1f8"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MakeOperationUI"",
            ""id"": ""40df712c-b71b-4366-bbbe-7d2e421af636"",
            ""actions"": [
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""9f05842e-aa03-4554-acee-9b0242d8c4e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Minus"",
                    ""type"": ""Button"",
                    ""id"": ""04f82142-719f-4f60-b095-79f277ac895c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Plus"",
                    ""type"": ""Button"",
                    ""id"": ""6e8f6113-74ef-40f4-a1d9-581d5ea1c5a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""95a3b444-e9f2-47f1-9845-115755b61cfe"",
                    ""path"": ""<Keyboard>/numpadPlus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Plus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcffbe69-c70c-411c-aaaa-cabfb07c4e34"",
                    ""path"": ""<Keyboard>/numpadMinus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Minus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c924283-8b2f-4bf6-b610-3d3934c9f5c3"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e54cf83-f7ab-428b-824c-474e5cc1c51c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""EarnNumberUI"",
            ""id"": ""cd9b1a17-a397-4ea9-9c18-8b81295b15d7"",
            ""actions"": [
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""8014c589-9880-474f-bf27-09d4c4b25da4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GenerateQuestion"",
                    ""type"": ""Button"",
                    ""id"": ""4e8d3c28-9fff-40a0-a063-8d26118fe4ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""eecd42c4-4e82-4380-b8e7-370dd49807ec"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1246d991-e7c3-4c7c-8f11-e1b2608336ea"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0e9a2d6-1ca5-4b96-9dd0-994b642ad727"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GenerateQuestion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GameManager"",
            ""id"": ""9620676d-d302-4f55-8be9-8e26311cf6df"",
            ""actions"": [
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""9ad47a22-ecc6-4d74-a3de-a1d53864687d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadScene"",
                    ""type"": ""Button"",
                    ""id"": ""dc9ab595-7d80-45ba-8659-f99947d90085"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""260be348-d009-4cfb-9fc5-a657202b80e4"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""943d12e3-cdfa-45fc-834e-2b5df7806059"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadScene"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BlackBoardUIManagement"",
            ""id"": ""cd10dadb-8b4e-4001-a9a6-fa8dccad48d9"",
            ""actions"": [
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""abbb7b15-d993-47d2-a5d7-46e632cdd813"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3105fb28-a96f-4580-82fd-8661a2589927"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13b28c18-04f7-4817-ab3e-2fc77c883318"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Keypad"",
            ""id"": ""fa031632-7707-4010-acc4-23da44ab14f7"",
            ""actions"": [
                {
                    ""name"": ""Delete"",
                    ""type"": ""Button"",
                    ""id"": ""2957591e-d92c-4a8a-ba62-d5ce87945d86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""f57e29f2-e821-4e25-bb77-44060c098120"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Nine"",
                    ""type"": ""Button"",
                    ""id"": ""91d19c12-4df6-4f5e-9e0a-427adc033a99"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Eight"",
                    ""type"": ""Button"",
                    ""id"": ""6eb4933c-f1d7-424e-846c-3edf6feac0fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Seven"",
                    ""type"": ""Button"",
                    ""id"": ""c8b3cfcd-3bf8-4477-be04-1cc3b55e0655"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Six"",
                    ""type"": ""Button"",
                    ""id"": ""d26ee253-d8b4-44d8-b48b-e8f8904070c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Five"",
                    ""type"": ""Button"",
                    ""id"": ""d77dce9f-fe09-4fe5-9bcd-1c7e238f45a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Four"",
                    ""type"": ""Button"",
                    ""id"": ""959c71fe-6f33-415f-b36b-72023cb66b21"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Three"",
                    ""type"": ""Button"",
                    ""id"": ""7a6e39ad-bec0-497b-a6da-893d56e7a145"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Two"",
                    ""type"": ""Button"",
                    ""id"": ""5fd2bf90-8546-4220-89c6-cea077da56aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""One"",
                    ""type"": ""Button"",
                    ""id"": ""48753d40-18be-4d9b-89a3-9763e53fc13a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zero"",
                    ""type"": ""Button"",
                    ""id"": ""e0058380-bfc8-4877-a13f-5bb7b98586db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d73a466a-4930-475d-9f8b-76afdccffe36"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zero"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e5b4301-adcc-4a60-9a92-147c295e16cc"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zero"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51d0a66c-6e08-4829-b0b7-06505df0d645"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""One"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""444a61b5-c84c-49ee-8ac0-6bb85de7fcc2"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""One"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7c182ff-a148-4b1d-b766-9b5717b00865"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Two"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d74d11d-c08c-4e19-8565-0c458adf5366"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Two"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f995a45-a038-41ac-87b6-30dadeb01fd0"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Three"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23b9eb37-4b0a-47ff-8f24-57e2cbe351ab"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Three"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34957026-1275-4f04-9375-345d179a3f03"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Four"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c044b7f3-37ae-49aa-9894-9f1d26159f4c"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Four"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fce70a0-eb1a-4610-b104-c0959bb0fdbc"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Five"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0845ccfa-1787-4536-976e-49d884b937f1"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Five"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ec0f436-6f8f-46c1-a141-babd4d917e9d"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Six"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1dc0c92-d3bb-4bb2-9924-d9d83278a983"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Six"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""075ecc37-69b8-40bf-b5e2-001a9e6f3709"",
                    ""path"": ""<Keyboard>/numpad7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Seven"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6dad77e-d801-40bc-86bc-89df7e1b6a0b"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Seven"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4a101eb-d64a-4939-a50b-1dbfd3db182a"",
                    ""path"": ""<Keyboard>/numpad8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa7668dd-e143-4f2a-b462-a3fd21f65e8f"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f448a1f-519e-47b1-803b-b4c0dd2107c7"",
                    ""path"": ""<Keyboard>/numpad9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Nine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d26c1e75-e061-413f-ae91-7a1a5f25a9ab"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Nine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81e10783-0c49-47d5-9742-ed2cc9b49d99"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""020fbea4-b49a-40bf-a0f0-bb18806c15e0"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcc59b9b-b9c1-4d0f-8648-93b5a5597f5d"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Delete"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbc4d144-9711-47f5-8407-9c7872df46c3"",
                    ""path"": ""<Keyboard>/delete"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Delete"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Gameplay
            m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
            m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
            m_Gameplay_Jump = m_Gameplay.FindAction("Jump", throwIfNotFound: true);
            m_Gameplay_Run = m_Gameplay.FindAction("Run", throwIfNotFound: true);
            m_Gameplay_Interact = m_Gameplay.FindAction("Interact", throwIfNotFound: true);
            // LockedDoorUI
            m_LockedDoorUI = asset.FindActionMap("LockedDoorUI", throwIfNotFound: true);
            m_LockedDoorUI_Exit = m_LockedDoorUI.FindAction("Exit", throwIfNotFound: true);
            // MakeOperationUI
            m_MakeOperationUI = asset.FindActionMap("MakeOperationUI", throwIfNotFound: true);
            m_MakeOperationUI_Exit = m_MakeOperationUI.FindAction("Exit", throwIfNotFound: true);
            m_MakeOperationUI_Minus = m_MakeOperationUI.FindAction("Minus", throwIfNotFound: true);
            m_MakeOperationUI_Plus = m_MakeOperationUI.FindAction("Plus", throwIfNotFound: true);
            // EarnNumberUI
            m_EarnNumberUI = asset.FindActionMap("EarnNumberUI", throwIfNotFound: true);
            m_EarnNumberUI_Exit = m_EarnNumberUI.FindAction("Exit", throwIfNotFound: true);
            m_EarnNumberUI_GenerateQuestion = m_EarnNumberUI.FindAction("GenerateQuestion", throwIfNotFound: true);
            // GameManager
            m_GameManager = asset.FindActionMap("GameManager", throwIfNotFound: true);
            m_GameManager_Escape = m_GameManager.FindAction("Escape", throwIfNotFound: true);
            m_GameManager_ReloadScene = m_GameManager.FindAction("ReloadScene", throwIfNotFound: true);
            // BlackBoardUIManagement
            m_BlackBoardUIManagement = asset.FindActionMap("BlackBoardUIManagement", throwIfNotFound: true);
            m_BlackBoardUIManagement_Exit = m_BlackBoardUIManagement.FindAction("Exit", throwIfNotFound: true);
            // Keypad
            m_Keypad = asset.FindActionMap("Keypad", throwIfNotFound: true);
            m_Keypad_Delete = m_Keypad.FindAction("Delete", throwIfNotFound: true);
            m_Keypad_Enter = m_Keypad.FindAction("Enter", throwIfNotFound: true);
            m_Keypad_Nine = m_Keypad.FindAction("Nine", throwIfNotFound: true);
            m_Keypad_Eight = m_Keypad.FindAction("Eight", throwIfNotFound: true);
            m_Keypad_Seven = m_Keypad.FindAction("Seven", throwIfNotFound: true);
            m_Keypad_Six = m_Keypad.FindAction("Six", throwIfNotFound: true);
            m_Keypad_Five = m_Keypad.FindAction("Five", throwIfNotFound: true);
            m_Keypad_Four = m_Keypad.FindAction("Four", throwIfNotFound: true);
            m_Keypad_Three = m_Keypad.FindAction("Three", throwIfNotFound: true);
            m_Keypad_Two = m_Keypad.FindAction("Two", throwIfNotFound: true);
            m_Keypad_One = m_Keypad.FindAction("One", throwIfNotFound: true);
            m_Keypad_Zero = m_Keypad.FindAction("Zero", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Gameplay
        private readonly InputActionMap m_Gameplay;
        private IGameplayActions m_GameplayActionsCallbackInterface;
        private readonly InputAction m_Gameplay_Move;
        private readonly InputAction m_Gameplay_Jump;
        private readonly InputAction m_Gameplay_Run;
        private readonly InputAction m_Gameplay_Interact;
        public struct GameplayActions
        {
            private @PlayerControls m_Wrapper;
            public GameplayActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Gameplay_Move;
            public InputAction @Jump => m_Wrapper.m_Gameplay_Jump;
            public InputAction @Run => m_Wrapper.m_Gameplay_Run;
            public InputAction @Interact => m_Wrapper.m_Gameplay_Interact;
            public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
            public void SetCallbacks(IGameplayActions instance)
            {
                if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                    @Jump.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJump;
                    @Jump.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJump;
                    @Jump.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJump;
                    @Run.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRun;
                    @Run.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRun;
                    @Run.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRun;
                    @Interact.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
                    @Interact.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
                    @Interact.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInteract;
                }
                m_Wrapper.m_GameplayActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @Jump.started += instance.OnJump;
                    @Jump.performed += instance.OnJump;
                    @Jump.canceled += instance.OnJump;
                    @Run.started += instance.OnRun;
                    @Run.performed += instance.OnRun;
                    @Run.canceled += instance.OnRun;
                    @Interact.started += instance.OnInteract;
                    @Interact.performed += instance.OnInteract;
                    @Interact.canceled += instance.OnInteract;
                }
            }
        }
        public GameplayActions @Gameplay => new GameplayActions(this);

        // LockedDoorUI
        private readonly InputActionMap m_LockedDoorUI;
        private ILockedDoorUIActions m_LockedDoorUIActionsCallbackInterface;
        private readonly InputAction m_LockedDoorUI_Exit;
        public struct LockedDoorUIActions
        {
            private @PlayerControls m_Wrapper;
            public LockedDoorUIActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Exit => m_Wrapper.m_LockedDoorUI_Exit;
            public InputActionMap Get() { return m_Wrapper.m_LockedDoorUI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(LockedDoorUIActions set) { return set.Get(); }
            public void SetCallbacks(ILockedDoorUIActions instance)
            {
                if (m_Wrapper.m_LockedDoorUIActionsCallbackInterface != null)
                {
                    @Exit.started -= m_Wrapper.m_LockedDoorUIActionsCallbackInterface.OnExit;
                    @Exit.performed -= m_Wrapper.m_LockedDoorUIActionsCallbackInterface.OnExit;
                    @Exit.canceled -= m_Wrapper.m_LockedDoorUIActionsCallbackInterface.OnExit;
                }
                m_Wrapper.m_LockedDoorUIActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Exit.started += instance.OnExit;
                    @Exit.performed += instance.OnExit;
                    @Exit.canceled += instance.OnExit;
                }
            }
        }
        public LockedDoorUIActions @LockedDoorUI => new LockedDoorUIActions(this);

        // MakeOperationUI
        private readonly InputActionMap m_MakeOperationUI;
        private IMakeOperationUIActions m_MakeOperationUIActionsCallbackInterface;
        private readonly InputAction m_MakeOperationUI_Exit;
        private readonly InputAction m_MakeOperationUI_Minus;
        private readonly InputAction m_MakeOperationUI_Plus;
        public struct MakeOperationUIActions
        {
            private @PlayerControls m_Wrapper;
            public MakeOperationUIActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Exit => m_Wrapper.m_MakeOperationUI_Exit;
            public InputAction @Minus => m_Wrapper.m_MakeOperationUI_Minus;
            public InputAction @Plus => m_Wrapper.m_MakeOperationUI_Plus;
            public InputActionMap Get() { return m_Wrapper.m_MakeOperationUI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MakeOperationUIActions set) { return set.Get(); }
            public void SetCallbacks(IMakeOperationUIActions instance)
            {
                if (m_Wrapper.m_MakeOperationUIActionsCallbackInterface != null)
                {
                    @Exit.started -= m_Wrapper.m_MakeOperationUIActionsCallbackInterface.OnExit;
                    @Exit.performed -= m_Wrapper.m_MakeOperationUIActionsCallbackInterface.OnExit;
                    @Exit.canceled -= m_Wrapper.m_MakeOperationUIActionsCallbackInterface.OnExit;
                    @Minus.started -= m_Wrapper.m_MakeOperationUIActionsCallbackInterface.OnMinus;
                    @Minus.performed -= m_Wrapper.m_MakeOperationUIActionsCallbackInterface.OnMinus;
                    @Minus.canceled -= m_Wrapper.m_MakeOperationUIActionsCallbackInterface.OnMinus;
                    @Plus.started -= m_Wrapper.m_MakeOperationUIActionsCallbackInterface.OnPlus;
                    @Plus.performed -= m_Wrapper.m_MakeOperationUIActionsCallbackInterface.OnPlus;
                    @Plus.canceled -= m_Wrapper.m_MakeOperationUIActionsCallbackInterface.OnPlus;
                }
                m_Wrapper.m_MakeOperationUIActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Exit.started += instance.OnExit;
                    @Exit.performed += instance.OnExit;
                    @Exit.canceled += instance.OnExit;
                    @Minus.started += instance.OnMinus;
                    @Minus.performed += instance.OnMinus;
                    @Minus.canceled += instance.OnMinus;
                    @Plus.started += instance.OnPlus;
                    @Plus.performed += instance.OnPlus;
                    @Plus.canceled += instance.OnPlus;
                }
            }
        }
        public MakeOperationUIActions @MakeOperationUI => new MakeOperationUIActions(this);

        // EarnNumberUI
        private readonly InputActionMap m_EarnNumberUI;
        private IEarnNumberUIActions m_EarnNumberUIActionsCallbackInterface;
        private readonly InputAction m_EarnNumberUI_Exit;
        private readonly InputAction m_EarnNumberUI_GenerateQuestion;
        public struct EarnNumberUIActions
        {
            private @PlayerControls m_Wrapper;
            public EarnNumberUIActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Exit => m_Wrapper.m_EarnNumberUI_Exit;
            public InputAction @GenerateQuestion => m_Wrapper.m_EarnNumberUI_GenerateQuestion;
            public InputActionMap Get() { return m_Wrapper.m_EarnNumberUI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(EarnNumberUIActions set) { return set.Get(); }
            public void SetCallbacks(IEarnNumberUIActions instance)
            {
                if (m_Wrapper.m_EarnNumberUIActionsCallbackInterface != null)
                {
                    @Exit.started -= m_Wrapper.m_EarnNumberUIActionsCallbackInterface.OnExit;
                    @Exit.performed -= m_Wrapper.m_EarnNumberUIActionsCallbackInterface.OnExit;
                    @Exit.canceled -= m_Wrapper.m_EarnNumberUIActionsCallbackInterface.OnExit;
                    @GenerateQuestion.started -= m_Wrapper.m_EarnNumberUIActionsCallbackInterface.OnGenerateQuestion;
                    @GenerateQuestion.performed -= m_Wrapper.m_EarnNumberUIActionsCallbackInterface.OnGenerateQuestion;
                    @GenerateQuestion.canceled -= m_Wrapper.m_EarnNumberUIActionsCallbackInterface.OnGenerateQuestion;
                }
                m_Wrapper.m_EarnNumberUIActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Exit.started += instance.OnExit;
                    @Exit.performed += instance.OnExit;
                    @Exit.canceled += instance.OnExit;
                    @GenerateQuestion.started += instance.OnGenerateQuestion;
                    @GenerateQuestion.performed += instance.OnGenerateQuestion;
                    @GenerateQuestion.canceled += instance.OnGenerateQuestion;
                }
            }
        }
        public EarnNumberUIActions @EarnNumberUI => new EarnNumberUIActions(this);

        // GameManager
        private readonly InputActionMap m_GameManager;
        private IGameManagerActions m_GameManagerActionsCallbackInterface;
        private readonly InputAction m_GameManager_Escape;
        private readonly InputAction m_GameManager_ReloadScene;
        public struct GameManagerActions
        {
            private @PlayerControls m_Wrapper;
            public GameManagerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Escape => m_Wrapper.m_GameManager_Escape;
            public InputAction @ReloadScene => m_Wrapper.m_GameManager_ReloadScene;
            public InputActionMap Get() { return m_Wrapper.m_GameManager; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GameManagerActions set) { return set.Get(); }
            public void SetCallbacks(IGameManagerActions instance)
            {
                if (m_Wrapper.m_GameManagerActionsCallbackInterface != null)
                {
                    @Escape.started -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnEscape;
                    @Escape.performed -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnEscape;
                    @Escape.canceled -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnEscape;
                    @ReloadScene.started -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnReloadScene;
                    @ReloadScene.performed -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnReloadScene;
                    @ReloadScene.canceled -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnReloadScene;
                }
                m_Wrapper.m_GameManagerActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Escape.started += instance.OnEscape;
                    @Escape.performed += instance.OnEscape;
                    @Escape.canceled += instance.OnEscape;
                    @ReloadScene.started += instance.OnReloadScene;
                    @ReloadScene.performed += instance.OnReloadScene;
                    @ReloadScene.canceled += instance.OnReloadScene;
                }
            }
        }
        public GameManagerActions @GameManager => new GameManagerActions(this);

        // BlackBoardUIManagement
        private readonly InputActionMap m_BlackBoardUIManagement;
        private IBlackBoardUIManagementActions m_BlackBoardUIManagementActionsCallbackInterface;
        private readonly InputAction m_BlackBoardUIManagement_Exit;
        public struct BlackBoardUIManagementActions
        {
            private @PlayerControls m_Wrapper;
            public BlackBoardUIManagementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Exit => m_Wrapper.m_BlackBoardUIManagement_Exit;
            public InputActionMap Get() { return m_Wrapper.m_BlackBoardUIManagement; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(BlackBoardUIManagementActions set) { return set.Get(); }
            public void SetCallbacks(IBlackBoardUIManagementActions instance)
            {
                if (m_Wrapper.m_BlackBoardUIManagementActionsCallbackInterface != null)
                {
                    @Exit.started -= m_Wrapper.m_BlackBoardUIManagementActionsCallbackInterface.OnExit;
                    @Exit.performed -= m_Wrapper.m_BlackBoardUIManagementActionsCallbackInterface.OnExit;
                    @Exit.canceled -= m_Wrapper.m_BlackBoardUIManagementActionsCallbackInterface.OnExit;
                }
                m_Wrapper.m_BlackBoardUIManagementActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Exit.started += instance.OnExit;
                    @Exit.performed += instance.OnExit;
                    @Exit.canceled += instance.OnExit;
                }
            }
        }
        public BlackBoardUIManagementActions @BlackBoardUIManagement => new BlackBoardUIManagementActions(this);

        // Keypad
        private readonly InputActionMap m_Keypad;
        private IKeypadActions m_KeypadActionsCallbackInterface;
        private readonly InputAction m_Keypad_Delete;
        private readonly InputAction m_Keypad_Enter;
        private readonly InputAction m_Keypad_Nine;
        private readonly InputAction m_Keypad_Eight;
        private readonly InputAction m_Keypad_Seven;
        private readonly InputAction m_Keypad_Six;
        private readonly InputAction m_Keypad_Five;
        private readonly InputAction m_Keypad_Four;
        private readonly InputAction m_Keypad_Three;
        private readonly InputAction m_Keypad_Two;
        private readonly InputAction m_Keypad_One;
        private readonly InputAction m_Keypad_Zero;
        public struct KeypadActions
        {
            private @PlayerControls m_Wrapper;
            public KeypadActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Delete => m_Wrapper.m_Keypad_Delete;
            public InputAction @Enter => m_Wrapper.m_Keypad_Enter;
            public InputAction @Nine => m_Wrapper.m_Keypad_Nine;
            public InputAction @Eight => m_Wrapper.m_Keypad_Eight;
            public InputAction @Seven => m_Wrapper.m_Keypad_Seven;
            public InputAction @Six => m_Wrapper.m_Keypad_Six;
            public InputAction @Five => m_Wrapper.m_Keypad_Five;
            public InputAction @Four => m_Wrapper.m_Keypad_Four;
            public InputAction @Three => m_Wrapper.m_Keypad_Three;
            public InputAction @Two => m_Wrapper.m_Keypad_Two;
            public InputAction @One => m_Wrapper.m_Keypad_One;
            public InputAction @Zero => m_Wrapper.m_Keypad_Zero;
            public InputActionMap Get() { return m_Wrapper.m_Keypad; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(KeypadActions set) { return set.Get(); }
            public void SetCallbacks(IKeypadActions instance)
            {
                if (m_Wrapper.m_KeypadActionsCallbackInterface != null)
                {
                    @Delete.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnDelete;
                    @Delete.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnDelete;
                    @Delete.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnDelete;
                    @Enter.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnEnter;
                    @Enter.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnEnter;
                    @Enter.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnEnter;
                    @Nine.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnNine;
                    @Nine.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnNine;
                    @Nine.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnNine;
                    @Eight.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnEight;
                    @Eight.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnEight;
                    @Eight.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnEight;
                    @Seven.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnSeven;
                    @Seven.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnSeven;
                    @Seven.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnSeven;
                    @Six.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnSix;
                    @Six.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnSix;
                    @Six.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnSix;
                    @Five.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnFive;
                    @Five.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnFive;
                    @Five.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnFive;
                    @Four.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnFour;
                    @Four.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnFour;
                    @Four.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnFour;
                    @Three.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnThree;
                    @Three.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnThree;
                    @Three.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnThree;
                    @Two.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnTwo;
                    @Two.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnTwo;
                    @Two.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnTwo;
                    @One.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnOne;
                    @One.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnOne;
                    @One.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnOne;
                    @Zero.started -= m_Wrapper.m_KeypadActionsCallbackInterface.OnZero;
                    @Zero.performed -= m_Wrapper.m_KeypadActionsCallbackInterface.OnZero;
                    @Zero.canceled -= m_Wrapper.m_KeypadActionsCallbackInterface.OnZero;
                }
                m_Wrapper.m_KeypadActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Delete.started += instance.OnDelete;
                    @Delete.performed += instance.OnDelete;
                    @Delete.canceled += instance.OnDelete;
                    @Enter.started += instance.OnEnter;
                    @Enter.performed += instance.OnEnter;
                    @Enter.canceled += instance.OnEnter;
                    @Nine.started += instance.OnNine;
                    @Nine.performed += instance.OnNine;
                    @Nine.canceled += instance.OnNine;
                    @Eight.started += instance.OnEight;
                    @Eight.performed += instance.OnEight;
                    @Eight.canceled += instance.OnEight;
                    @Seven.started += instance.OnSeven;
                    @Seven.performed += instance.OnSeven;
                    @Seven.canceled += instance.OnSeven;
                    @Six.started += instance.OnSix;
                    @Six.performed += instance.OnSix;
                    @Six.canceled += instance.OnSix;
                    @Five.started += instance.OnFive;
                    @Five.performed += instance.OnFive;
                    @Five.canceled += instance.OnFive;
                    @Four.started += instance.OnFour;
                    @Four.performed += instance.OnFour;
                    @Four.canceled += instance.OnFour;
                    @Three.started += instance.OnThree;
                    @Three.performed += instance.OnThree;
                    @Three.canceled += instance.OnThree;
                    @Two.started += instance.OnTwo;
                    @Two.performed += instance.OnTwo;
                    @Two.canceled += instance.OnTwo;
                    @One.started += instance.OnOne;
                    @One.performed += instance.OnOne;
                    @One.canceled += instance.OnOne;
                    @Zero.started += instance.OnZero;
                    @Zero.performed += instance.OnZero;
                    @Zero.canceled += instance.OnZero;
                }
            }
        }
        public KeypadActions @Keypad => new KeypadActions(this);
        public interface IGameplayActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnRun(InputAction.CallbackContext context);
            void OnInteract(InputAction.CallbackContext context);
        }
        public interface ILockedDoorUIActions
        {
            void OnExit(InputAction.CallbackContext context);
        }
        public interface IMakeOperationUIActions
        {
            void OnExit(InputAction.CallbackContext context);
            void OnMinus(InputAction.CallbackContext context);
            void OnPlus(InputAction.CallbackContext context);
        }
        public interface IEarnNumberUIActions
        {
            void OnExit(InputAction.CallbackContext context);
            void OnGenerateQuestion(InputAction.CallbackContext context);
        }
        public interface IGameManagerActions
        {
            void OnEscape(InputAction.CallbackContext context);
            void OnReloadScene(InputAction.CallbackContext context);
        }
        public interface IBlackBoardUIManagementActions
        {
            void OnExit(InputAction.CallbackContext context);
        }
        public interface IKeypadActions
        {
            void OnDelete(InputAction.CallbackContext context);
            void OnEnter(InputAction.CallbackContext context);
            void OnNine(InputAction.CallbackContext context);
            void OnEight(InputAction.CallbackContext context);
            void OnSeven(InputAction.CallbackContext context);
            void OnSix(InputAction.CallbackContext context);
            void OnFive(InputAction.CallbackContext context);
            void OnFour(InputAction.CallbackContext context);
            void OnThree(InputAction.CallbackContext context);
            void OnTwo(InputAction.CallbackContext context);
            void OnOne(InputAction.CallbackContext context);
            void OnZero(InputAction.CallbackContext context);
        }
    }
}
